{% set name = "pycolmap" %}
{% set version = "0.5.0.2023.12.20" %}
{% set commit_sha = "bb1732139c800ddf5336bdfc9e5e24053351d47d" %} 

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/colmap/{{ name }}/archive/{{ commit_sha }}.tar.gz
    sha256: 0fa8b72e54825a113aed4ea9ad67ab50e80851645c81be5672ff2123e4fa4e76
    patches:
      - 214.patch

build:
  number: 0
  # scikit-build tries to find the latest MSVC compiler instead instead of using
  # cl.exe from the current environment, so on Windows we need to set the full
  # compiler paths in a script.
  script: {{ PYTHON }} -m pip install . -vv  # [not win]
  script_env:
    - CMAKE_GENERATOR=Ninja
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version not in (undefined, "None")]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version in (undefined, "None")]
  skip: true  # [win and cuda_compiler_version == "11.2"]
  # weigh down cpu implementation and give cuda preference
  track_features:
    - pycolmap-cpu  # [cuda_compiler_version in (undefined, "None")]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}                 # [cuda_compiler_version not in (undefined, "None")]
    - cmake
    - make                                   # [unix]
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - scikit-build                           # [build_platform != target_platform]
    - scikit-build-core                      # [build_platform != target_platform]
    # x11 stuff
    - {{ cdt('mesa-libgl-devel') }}          # [unix and not arm64]
    - {{ cdt('mesa-dri-drivers') }}          # [unix and not arm64]
    - {{ cdt('libselinux') }}                # [linux]
    - {{ cdt('libxcb') }}                    # [linux]
    - {{ cdt('libxdamage') }}                # [linux]
    - {{ cdt('libxfixes') }}                 # [linux]
    - {{ cdt('libxxf86vm') }}                # [linux]
    - {{ cdt('libxext') }}                   # [linux]
    - {{ cdt('libxau') }}                    # [linux]
    - {{ cdt('expat-devel') }}               # [linux]
    - sysroot_linux-64 2.17                  # [linux64]
    - llvm-openmp                            # [osx]
    - libgomp                                # [linux]
  host:
    - pip
    - python
    - scikit-build
    - scikit-build-core
    - pybind11
    - libboost-devel
    - colmap 3.9*           # [not win]
    - colmap 3.9*           # [win and (cuda_compiler_version or "").startswith("12")]
    - colmap 3.9*=gpu*_101  # [win and cuda_compiler_version not in (undefined, "None") and not (cuda_compiler_version or "").startswith("12")]
    - colmap 3.9*=cpu*_1    # [win and cuda_compiler_version in (undefined, "None")]
    - libblas
    - libcblas
    - cgal-cpp
    - sqlite
    - flann
    - glog
    - gflags
    - flann
    - freeimage
    - metis
    - ceres-solver
    - glew
    - vlfeat                                 # [unix]
    - gmp                                    # [unix]
    - qt-main
    - mpir                                   # [win]
    - cuda-cudart-dev {{ cuda_compiler_version }}  # [(cuda_compiler_version or "").startswith("12")]
  run:
    - python
    - flann
    - vlfeat
    - numpy
    - __cuda >={{ cuda_compiler_version }}   # [cuda_compiler_version not in (undefined, "None")]

test:
  imports:
    - pycolmap
  commands:
    - pip check
    - python -c "import pycolmap; reconstruction = pycolmap.Reconstruction(); x = reconstruction.points3D"
  requires:
    - pip

about:
  home: https://colmap.github.io/
  license: BSD-3-Clause
  license_file:
    - LICENSE
  summary: pycolmap exposes to Python most COLMAP reconstruction objects, such as Cameras and Points3D, as well as estimators for absolute and relative poses.

extra:
  recipe-maintainers:
    - Tobias-Fischer
